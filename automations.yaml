- id: ha_startup_items
  alias: Home Assistant Startup Item
  trigger:
    platform: homeassistant
    event: start
  action:
  - service: mqtt.publish
    data:
      topic: cmnd/tasmotas/backlog
      payload: 'power1 ;power2 ;power3 ;power4 ;power5; dimmer; state '
- id: ha_notify_ha_update_available
  alias: Update Available Notification
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.python_package_index_pypi_update_available
    from: 'off'
    to: 'on'
  action:
    service: notify.zulip
    data:
      message: '{{ trigger.to_state.attributes.friendly_name }} has an update available.'
      title: Home Assistant
- id: ha_notify_hacs_update_available
  alias: HACS Update Available Notification
  initial_state: true
  trigger:
    platform: template
    value_template: '{{ states("sensor.hacs") | int > 0 }}'
  action:
    service: notify.zulip
    data:
      message: '{{ trigger.to_state.attributes.friendly_name }} has an update available.'
      title: Home Assistant
- id: occupancy_alarm_no_one_home_alarm_alarm
  alias: Occupancy - no one home - alarm alarm
  trigger:
  - platform: state
    entity_id:
    - person.gail
    - person.gervais
    - group.cam_tracker
    - group.jen_tracker
    from: home
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ states("person.gail") != "home" }}'
    - condition: template
      value_template: '{{ states("person.gervais") != "home" }}'
    - condition: template
      value_template: '{{ states("group.cam_tracker") != "home" }}'
    - condition: template
      value_template: '{{ states("group.jen_tracker") != "home" }}'
  action:
  - service: alarm_control_panel.alarm_arm_away
    target:
      entity_id: alarm_control_panel.alarmo
    data: {}
  initial_state: true
- id: occupancy_alarm_return_home_disarm_alarm
  alias: Occupancy - return home - disarm alarm
  trigger:
  - platform: state
    entity_id:
    - group.cam_tracker
    - group.jen_tracker
    - person.gail
    - person.gervais
    to: home
  action:
  - service: alarm_control_panel.alarm_disarm
    target:
      entity_id: alarm_control_panel.alarmo
    data: {}
  initial_state: true
- id: tap0_button_1
  alias: Tap0 Button 1
  trigger:
    device_id: 2b533c9f9b279032d1907efe688c476d
    domain: hue
    platform: device
    type: initial_press
    subtype: 1
    unique_id: a9cd78d6-bb3c-404b-9091-af08cc7a2b45
  action:
    service: light.toggle
    entity_id: light.sunroom_lights
- id: tap0_button_2
  alias: Tap0 Button 2
  trigger:
  - device_id: 2b533c9f9b279032d1907efe688c476d
    domain: hue
    platform: device
    type: initial_press
    subtype: 2
    unique_id: a9cd78d6-bb3c-404b-9091-af08cc7a2b45
  action:
    service: scene.turn_on
    entity_id: scene.sunroom_dim
- id: tap0_button_3
  alias: Tap0 Button 3
  trigger:
  - device_id: 2b533c9f9b279032d1907efe688c476d
    domain: hue
    platform: device
    type: initial_press
    subtype: 3
    unique_id: a9cd78d6-bb3c-404b-9091-af08cc7a2b45
  action:
  - service: homeassistant.turn_on
    entity_id: automation.lighting_plex_play_pause
  - service: homeassistant.turn_on
    entity_id: automation.sunroom_no_occupancy_lights_off
  - service: scene.turn_on
    entity_id: scene.sunroom_dim
- id: tap0_button_4
  alias: Tap0 Button 4
  trigger:
  - device_id: 2b533c9f9b279032d1907efe688c476d
    domain: hue
    platform: device
    type: initial_press
    subtype: 4
    unique_id: a9cd78d6-bb3c-404b-9091-af08cc7a2b45
  action:
  - service: homeassistant.turn_off
    entity_id: automation.lighting_plex_play_pause
  - service: homeassistant.turn_off
    entity_id: automation.sunroom_no_occupancy_lights_off
  - service: scene.turn_on
    entity_id: scene.sunroom_normal
- id: tap1_buttons
  alias: Tap1 Doorbell
  trigger:
  - device_id: 34639f5aa92cbec96fe2fb0a0ec6cf7c
    domain: hue
    platform: device
    type: initial_press
    subtype: 1
    unique_id: 0d35c07b-3179-486a-87cc-787794d0b994
  - device_id: 34639f5aa92cbec96fe2fb0a0ec6cf7c
    domain: hue
    platform: device
    type: initial_press
    subtype: 2
    unique_id: 0d35c07b-3179-486a-87cc-787794d0b994
  - device_id: 34639f5aa92cbec96fe2fb0a0ec6cf7c
    domain: hue
    platform: device
    type: initial_press
    subtype: 3
    unique_id: 0d35c07b-3179-486a-87cc-787794d0b994
  - device_id: 34639f5aa92cbec96fe2fb0a0ec6cf7c
    domain: hue
    platform: device
    type: initial_press
    subtype: 4
    unique_id: 0d35c07b-3179-486a-87cc-787794d0b994
  action:
  - service: notify.mobile_app_iphone
    data:
      message: "Someone is at the front door. \U0001F514"
  - service: notify.mobile_app_gail_iphone
    data:
      message: "Someone is at the front door. \U0001F514"
  - condition: state
    entity_id: media_player.roku_living_roomtv
    state: playing
  - service: remote.send_command
    data:
      entity_id: remote.roku_livingroom
      command: play
- id: occupancy_heating_no_one_home_turn_down_heat
  alias: Occupancy - no one home - turn down heat
  trigger:
  - platform: state
    entity_id:
    - person.gail
    - person.gervais
    - person.cameron
    - person.jennifer
    from: home
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ states("person.gail") != "home" }}'
    - condition: template
      value_template: '{{ states("person.gervais") != "home" }}'
    - condition: template
      value_template: '{{ states("sensor.season") != "summer" }}'
    - condition: template
      value_template: '{{ states("sensor.saint_john_temperature") | int <= 5 }}'
  action:
  - service: scene.turn_on
    metadata: {}
    target:
      entity_id: scene.heat_away
  initial_state: true
- id: occupancy_heating_return_home_turn_up_heat
  alias: Occupancy - return home - turn up heat
  trigger:
  - platform: state
    entity_id:
    - person.gail
    - group.cam_tracker
    - group.jen_tracker
    - person.gervais
    to: home
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ states("sensor.season") != "summer" }}'
    - condition: template
      value_template: '{{ states("sensor.saint_john_temperature") | int <= 5 }}'
    - condition: time
      after: '16:30:00'
    - condition: time
      before: '23:20:00'
  action:
  - service: scene.turn_on
    metadata: {}
    target:
      entity_id: scene.heat_home
  initial_state: true
- id: occupancy_heating_work_day_dressing_bath_room_heater
  alias: Heat - Work day dressing bathroom room schedule
  description: ''
  trigger:
  - platform: time
    at: 07:00:00
  - platform: time
    at: 08:00:00
  - platform: time
    at: 09:00:00
  - platform: time
    at: '22:15:00'
  - platform: state
    entity_id:
    - person.gail
    from: home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ states("sensor.season") != "summer" }}'
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
    - condition: numeric_state
      entity_id: sensor.saint_john_temperature
      below: 5
  action:
  - service: climate.set_temperature
    data:
      temperature: "{%- if (now().strftime(\"%H\") | int < 9)\n  and (now().strftime(\"%H\")
        | int >= 7)\n  and is_state(\"person.gail\", \"home\")\n  and states(\"sensor.season\")
        != \"summer\" -%}\n    22\n{%- else -%}\n    15\n{% endif %}\n"
    target:
      entity_id:
      - climate.mysa_bathroom_thermostat
      - climate.mysa_dressing_room_thermostat
- id: heating_office_heater_off
  alias: 6pm - heater off
  trigger:
  - platform: time
    at: '19:00:00'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ states("sensor.season") != "summer" }}'
  action:
  - service: switch.turn_off
    entity_id: switch.switch1
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: switch.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: switch.switch1
  initial_state: true
- id: occupancy_heating_gail_away_heater_off
  alias: Gail away - toggle office switch
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.gail
    from: home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - service: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.switch1
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: switch.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: switch.switch1
  initial_state: true
- id: occupancy_bedroom_gang_not_home
  alias: GandG not home - turn off bedroom things
  trigger:
  - platform: state
    entity_id:
    - person.gail
    - person.gervais
    from: home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: not
      conditions:
      - condition: state
        entity_id: person.gail
        state: home
    - condition: not
      conditions:
      - condition: state
        entity_id: device_tracker.iphone
        state: home
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.bedroom_lights
      - light.bathroom_lights
  initial_state: true
- id: occupancy_bedroom_turn_on_lights
  alias: Occupancy in bedroom - turn on lights
  initial_state: false
  trigger:
    platform: state
    entity_id: binary_sensor.master_bedroom_occupancy
    to: 'on'
  condition:
  - condition: state
    entity_id: light.bedroom_lights
    state: 'off'
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
    service: light.turn_on
    entity_id: light.bedroom_lights
- id: occupancy_bedroom_turn_off_lights
  alias: No one in bedroom - turn off lights
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.master_bedroom_occupancy
    to: 'off'
    for:
      minutes: 30
  action:
  - service: light.turn_off
    entity_id:
    - light.bedroom_lights
  - condition: state
    entity_id: sun.sun
    state: above_horizon
  - service: light.turn_off
    entity_id: light.bathroom_lights
- id: occupancy_lighting_basement_on
  alias: Basement - Occupancy lights on
  initial_state: false
  mode: restart
  trigger:
  - platform: state
    entity_id: binary_sensor.rack_motion
    to: 'on'
  - platform: state
    entity_id: binary_sensor.basement_sensor_motion
    to: 'on'
  action:
  - service: light.turn_on
    entity_id: light.basement_lights
  - delay: 00:10
  - condition: state
    entity_id: binary_sensor.basement_sensor_motion
    state: 'off'
  - service: light.turn_off
    entity_id: light.basement_lights
- id: lighting_basement_sync_up
  alias: Basement - Light sync up
  initial_state: false
  trigger:
  - platform: state
    entity_id:
    - light.basement0
    - light.basement1
    - light.basement2
  action:
  - variables:
      myService: "{%- if trigger.to_state.state == 'on' -%}\n      light.turn_on\n{%-
        else -%}\n      light.turn_off\n{% endif %}\n"
  - service: '{{ myService }}'
    entity_id: light.basement_lights
- id: occupancy_garage_turn_off_lights
  alias: Occupance in Garage - turn off lights
  initial_state: false
  trigger:
    platform: template
    value_template: '{{ state_attr("device_tracker.jjn66qf9lo", "ap_mac") != "d0:21:f9:61:26:99"
      }}'
  action:
    service: light.turn_off
    entity_id:
    - light.garage_lamp
    - light.garage_pots
- id: occupancy_hallway_turn_on_lights
  alias: Occupancy in hallway - turn on lights
  initial_state: false
  mode: restart
  trigger:
    platform: state
    entity_id: binary_sensor.my_ecobee_occupancy,binary_sensor.upstair_hall_occupancy
    to: 'on'
  condition:
  - condition: state
    entity_id: light.hallway_lights
    state: 'off'
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - service: light.turn_on
    entity_id: light.hallway_lights
  - delay: 00:15
  - service: light.turn_off
    entity_id: light.hallway_lights
- id: occupancy_lighting_kitchen_on
  alias: Kitchen - Occupancy lights on
  trigger:
  - platform: state
    entity_id: binary_sensor.kitchen_sensor_motion
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: light.kitchen_lights
      state: 'off'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - service: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id:
      - light.kitchen_counter
      - light.kitchen_pots
- id: occupancy_lighting_kitchen_off
  alias: Kitchen - No occupancy lights off
  trigger:
  - platform: state
    entity_id: binary_sensor.kitchen_sensor_motion
    to: 'off'
    for:
      minutes: 30
  action:
  - service: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: light.kitchen_lights
- id: lighting_livingroomtv_play-pause
  alias: Lighting - TV play/pause
  trigger:
  - platform: state
    entity_id:
    - media_player.plex_plex_for_roku_living_roomtv
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
    - condition: state
      entity_id: light.livingroom_lights
      state: 'on'
  action:
  - service: scene.turn_on
    data:
      entity_id: "{%- if trigger.to_state.state == 'playing' -%}\n      scene.living_room_dim\n{%-
        else -%}\n      scene.living_room_normal\n{% endif %}\n"
  initial_state: false
- id: occupancy_lighting_motion_livingroom
  alias: Timed lights - Movement in Living
  trigger:
  - platform: state
    entity_id: binary_sensor.sun_room_sensor_motion
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: light.livingroom_lights
      state: 'off'
    - condition: numeric_state
      entity_id: sensor.sun_room_sensor_light_level
      below: 3
  action:
  - service: light.turn_on
    data:
      brightness_pct: 29
    target:
      entity_id:
      - light.livingroom_lamps
      - light.saltlick
  - delay: 00:10
  - condition: time
    after: '23:59:00'
  - service: light.turn_off
    entity_id:
    - light.livingroom_lights
    - light.hallway_lights
  mode: restart
- id: occupancy_lighting_sunroom_off
  alias: Living room - No occupancy lights off
  trigger:
    platform: state
    entity_id: binary_sensor.sun_room_sensor_motion
    to: 'off'
    for:
      minutes: 10
  condition:
    condition: state
    entity_id: media_player.roku_living_roomtv
    state: standby
  action:
    service: light.turn_off
    entity_id: light.livingroom_lights
- id: lighting_sunroom_lumens_low_lights_on
  alias: Sunroom lumens low - lights on
  trigger:
  - platform: state
    entity_id: media_player.roku_living_roomtv
    from: standby
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ states.sensor.sun_room_sensor_light_level.attributes.light_level  <
        6500 }}'
    - condition: state
      entity_id: light.livingroom_lights
      state: 'off'
  action:
  - service: scene.turn_on
    metadata: {}
    target:
      entity_id: scene.living_room_normal
- id: turn_on_lights_office
  alias: Occupancy in Office - turn on lights
  initial_state: false
  trigger:
  - platform: state
    entity_id: binary_sensor.office_occupancy
    to: 'on'
  - platform: time
    at: 09:00:00
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: time
    after: '8:00'
    before: '20:00'
  action:
  - service: light.turn_on
    data:
      entity_id: light.office_lights
      brightness: 255
  - condition: state
    entity_id: person.gail
    state: home
  - service: light.turn_on
    entity_id: light.dressing_room_lights
- id: turn_off_lights_office
  alias: No one in Office - turn off lights
  initial_state: false
  trigger:
    platform: state
    entity_id: binary_sensor.office_occupancy
    to: 'off'
    for:
      minutes: 10
  action:
  - service: light.turn_off
    entity_id: light.office_lights
  - service: switch.turn_off
    entity_id: switch.switch1
  - condition: template
    value_template: '{{ states("person.gail") != "home" }}'
  - service: light.turn_off
    entity_id: light.dressing_room_lights
- id: movement_front_door_timed_lights
  alias: Timed lights - Movement Front Door
  initial_state: false
  mode: restart
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.doorbell_motion
    - binary_sensor.doorbell_doorbell
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: light.outdoor_lights
      state: 'off'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - service: homeassistant.turn_off
    entity_id: automation.timed_lights_movement_front_door
  - service: light.turn_on
    data:
      entity_id:
      - light.outdoor_lights
      brightness: 255
  - delay: 00:10:00
  - service: light.turn_off
    entity_id:
    - light.outdoor_lights
  - delay: 00:00:04
  - service: homeassistant.turn_on
    entity_id: automation.timed_lights_movement_front_door
- id: movement_porch_timed_lights
  alias: Timed lights - Movement Porch
  initial_state: false
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.porch0_motion
    - binary_sensor.porch1_cell_motion_detection
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: light.outdoor_lights
      state: 'off'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - service: light.turn_on
    entity_id: light.outdoor_lights
  - delay: 00:10:00
  - service: light.turn_off
    entity_id: light.outdoor_lights
  mode: restart
- id: occupancy_spare_room_on
  alias: Spareroom - Occupancy lights on
  initial_state: false
  trigger:
    platform: state
    entity_id: binary_sensor.spare_room_sensor_motion
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: light.spare_room_lights
      state: 'off'
    - condition: template
      value_template: '{{ state_attr("sensor.spare_room_sensor_light_level", "dark")
        }}'
  action:
    service: light.turn_on
    entity_id: light.spare_room_lights
- id: occupancy_spare_room_off
  alias: Spareroom - No occupancy lights off
  initial_state: false
  trigger:
    platform: state
    entity_id: binary_sensor.spare_room_sensor_motion
    to: 'off'
    for:
      minutes: 5
  action:
    service: light.turn_off
    entity_id: light.spare_room_lights
- id: bedtime
  alias: Bedtime
  trigger:
  - platform: state
    entity_id:
    - media_player.roku_living_roomtv
    to: standby
    for:
      minutes: 5
  condition:
  - condition: and
    conditions:
    - condition: or
      conditions:
      - condition: time
        after: '22:00:00'
      - condition: time
        before: 02:00:00
    - condition: and
      conditions:
      - condition: state
        entity_id: person.gervais
        state: home
      - condition: or
        conditions:
        - condition: state
          entity_id: person.gail
          state: home
        - condition: template
          value_template: '{{ distance(states.device_tracker.grdems_phone_2) > 10
            }}'
    - condition: and
      conditions:
      - condition: state
        entity_id: person.gail
        state: home
      - condition: or
        conditions:
        - condition: state
          entity_id: person.gervais
          state: home
        - condition: template
          value_template: '{{ distance(states.device_tracker.iphone) > 10 }}'
  action:
  - delay: 00:15:00
  - service: homeassistant.turn_off
    metadata: {}
    data: {}
    target:
      entity_id:
      - light.main_floor_lights
      - light.second_floor_lights
      - switch.switch3
  - service: climate.set_preset_mode
    data:
      entity_id: climate.my_ecobee
      preset_mode: Sleep
  mode: restart
- id: doorbell_doorbell
  alias: Doorbell rang - pause tv
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.doorbell_doorbell
    to: 'on'
  action:
    service: remote.send_command
    data:
      entity_id: remote.roku_livingroom
      command: pause
- id: everyone_home_and_gone_to_bed
  alias: Everyone home and gone to bed - Lights out
  initial_state: true
  trigger:
  - platform: state
    entity_id: media_player.roku_living_roomtv
    to: standby
    for:
      minutes: 15
  - platform: state
    entity_id: person.gail,person.gervais
    to: home
  condition:
    condition: and
    conditions:
    - condition: time
      after: '22:30:00'
    - condition: state
      entity_id: media_player.roku_living_roomtv
      state: standby
    - condition: or
      conditions:
      - condition: template
        value_template: '{{ states("person.gail") != "home" }}'
      - condition: template
        value_template: '{{ distance(states.device_tracker.grdems_phone_2) > 10 }}'
    - condition: or
      conditions:
      - condition: template
        value_template: '{{ states("person.gervais") != "home" }}'
      - condition: template
        value_template: '{{ distance(states.device_tracker.iphone) > 10 }}'
  action:
  - delay: 00:10:00
  - service: homeassistant.turn_off
    entity_id: automation.timed_lights_movement_front_door
  - service: light.turn_off
    entity_id: all
  - service: homeassistant.turn_off
    entity_id:
    - light.bathroom_lights
    - light.main_floor_lights
    - light.outdoor_lights
    - light.second_floor_lights
  - delay: 00:00:04
  - service: homeassistant.turn_on
    entity_id: automation.timed_lights_movement_front_door
- id: lighting_2am_lights_off
  alias: 2am - Lights out
  trigger:
  - platform: time
    at: 02:00:00
  action:
  - service: homeassistant.turn_off
    entity_id: automation.timed_lights_movement_front_door
  - service: switch.turn_off
    data: {}
    target:
      entity_id:
      - switch.switch0
      - switch.switch3
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.main_floor_lights
      - light.second_floor_lights
      - light.third_floor_lights
      - light.outdoor_lights
  - delay: 00:00:05
  - service: homeassistant.turn_on
    entity_id: automation.timed_lights_movement_front_door
  initial_state: true
- id: sunrise
  alias: Sunrise - Lights out
  initial_state: false
  trigger:
    platform: sun
    event: sunrise
    offset: +00:30:00
  action:
  - service: light.turn_off
    entity_id:
    - light.hallway_lights
    - light.garage_lights
    - light.main_floor_lights
    - light.outdoor_lights
    - light.spare_room_lights
  - condition: state
    entity_id: binary_sensor.master_bedroom_occupancy
    state: 'off'
  - service: light.turn_off
    entity_id: all
- id: sunset
  alias: Sunset - Lights on
  trigger:
  - platform: sun
    event: sunset
    offset: -00:30:00
  - platform: numeric_state
    entity_id:
    - sensor.sun_room_sensor_light_level
    below: 3
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: light.livingroom_lights
      state: 'off'
      for:
        hours: 1
        minutes: 0
        seconds: 0
    - condition: time
      before: '23:00:00'
      after: 08:00:00
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.sunset
    data: {}
  - service: switch.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: switch.switch3
  initial_state: true
- id: misc_sabnzb_speed_limit
  alias: Set sabnzb speed limit
  trigger:
  - platform: state
    entity_id: person.gail,person.gervais,group.jen_tracker
  - platform: time
    at: '10:00:00'
  - platform: time
    at: '18:00:00'
  - platform: time
    at: 02:00:00
  - platform: template
    value_template: '{{ states.media_player | select("match", ".*media_player.plex_.*")
      | list | selectattr("state", "equalto", "playing") | list | count | int >= 1
      }}'
  - platform: template
    value_template: '{{ states.media_player | select("match", ".*media_player.plex_.*")
      | list | selectattr("state", "equalto", "playing") | list | count | int == 0
      }}'
  action:
  - service: rest_command.sabnzb_api
    data: {}
  initial_state: false
- id: misc_living_room_turn_off_tv
  alias: Turn off living room tv when idle
  initial_state: true
  trigger:
  - platform: time_pattern
    minutes: /20
    seconds: 0
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ states("media_player.roku_living_roomtv") != "standby" }}'
    - condition: template
      value_template: '{{ states("media_player.roku_living_roomtv") != "unavailable"
        }}'
    - condition: state
      entity_id: binary_sensor.sun_room_sensor_motion
      state: 'off'
      for:
        minutes: 39
    - condition: or
      conditions:
      - condition: state
        entity_id: media_player.plex_plex_for_roku_living_roomtv
        state: idle
        for:
          minutes: 15
      - condition: state
        entity_id: media_player.roku_living_roomtv
        state: idle
        for:
          minutes: 15
      - condition: state
        entity_id: media_player.roku_living_roomtv
        state: home
        for:
          minutes: 15
      - condition: state
        entity_id: media_player.roku_living_roomtv
        state: 'on'
        for:
          minutes: 15
  action:
    service: remote.send_command
    data:
      entity_id: remote.roku_livingroom
      command: power
- id: notify_home_presence
  alias: Home presence notification
  initial_state: false
  trigger:
    platform: state
    entity_id: group.cam_tracker,group.jen_tracker,group.grant_tracker
  condition:
    condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.sensor.hass_uptime.state)
      | int > 5 }}'
  action:
    service: notify.zulip
    data_template:
      message: ':{{ trigger.to_state.attributes.friendly_name | lower }}: {{ trigger.to_state.attributes.friendly_name
        }} has {%- if trigger.to_state.state == ''home'' %} entered {%- else %} exited
        {%- endif %} home.

        '
      title: Family Location
- id: notify_phone_presence
  alias: Phones presence notification
  initial_state: true
  trigger:
    platform: state
    entity_id: person.gervais,person.gail
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ as_timestamp(now()) - as_timestamp(states.sensor.hass_uptime.state)
        | int > 5 }}'
    - condition: template
      value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    service: notify.zulip
    data_template:
      message: ':{{ trigger.to_state.attributes.friendly_name | lower }}: {{ trigger.to_state.attributes.friendly_name
        }} has {%- if trigger.from_state.state == ''not_home'' or trigger.from_state.state
        == ''Away'' %} entered {{ trigger.to_state.state }}. {%- else %} exited {{
        trigger.from_state.state }}. {%- endif %}

        '
      title: Family Location
- id: notify_current_weather
  alias: Current weather notification
  trigger:
  - platform: state
    entity_id:
    - sensor.saint_john_current_condition
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ as_timestamp(now()) - as_timestamp(states.sensor.hass_uptime.state)
        | int > 5 }}'
    - condition: template
      value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
    - condition: template
      value_template: '{{ trigger.to_state.state != "unknown" }}'
    - condition: template
      value_template: '{{ states("sensor.saint_john_current_condition") != "unavailable"
        }}'
    - condition: template
      value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.current_weather_notification.attributes.last_triggered)
        | int > 3600 }}'
  action:
  - service: notify.zulip
    data_template:
      message: '**Weather Condition:** {{ states.sensor.saint_john_current_condition.state
        }}

        **Tempurature:** {{ states.sensor.saint_john_temperature.state }}{{ states.sensor.saint_john_temperature.attributes.unit_of_measurement
        }} {% if states.sensor.saint_john_humidex.state != ''unknown'' or states.sensor.saint_john_wind_chill.state
        != ''unknown'' %}

        **Feels like:** {% if states.sensor.saint_john_humidex.state != ''unknown''
        %} {{ states.sensor.saint_john_humidex.state }}{% elif states.sensor.saint_john_wind_chill.state
        != ''unknown'' %}{{ states.sensor.saint_john_wind_chill.state }}{% endif %}{{
        states.sensor.saint_john_temperature.attributes.unit_of_measurement }} {%
        endif %}

        '
      title: Weather
  initial_state: true
- id: notify_current_uv_index
  alias: Current UV index notification
  initial_state: true
  trigger:
    platform: numeric_state
    entity_id: sensor.saint_john_uv_index
    above: '5'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ as_timestamp(now()) - as_timestamp(states.sensor.hass_uptime.state)
        | int > 5 }}'
    - condition: state
      entity_id: sun.sun
      state: above_horizon
  action:
    service: notify.zulip
    data:
      message: ':sunny: UV Index is {{ states("sensor.saint_john_uv_index") }}. You
        better put on some sunscreen!

        '
      title: Weather
- id: notify_weather_forecast
  alias: Weather forecast notification
  trigger:
  - platform: time
    at: 08:00:00
  condition:
  - condition: template
    value_template: '{{ states("weather.saint_john_forecast") != ''unknown'' }}'
  - condition: template
    value_template: '{{ states("sensor.saint_john_normal_high_temperature") != ''unknown''
      }}'
  - condition: template
    value_template: '{{ states("sensor.saint_john_low_temperature") != ''unknown''
      }}'
  action:
  - service: notify.zulip
    data:
      message: '**Forecast:**

        {{ states("sensor.saint_john_summary") }}


        **High:** {{ states("sensor.saint_john_high_temperature") }}{{ state_attr("sensor.saint_john_high_temperature"
        , "unit_of_measurement") }}

        **Low:** {{ states("sensor.saint_john_low_temperature") }}{{ state_attr("sensor.saint_john_low_temperature"
        , "unit_of_measurement") }}

        '
      title: Weather
  initial_state: true
- id: notify_low_battery
  alias: Low battery level detection & notification for all battery sensors
  initial_state: true
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      threshold: 10
      time: '19:00:00'
      exclude:
        entity_id:
        - sensor.internal_battery_level
        - sensor.alice_battery_level
        - sensor.consuela_battery_level
        - sensor.gail_iphone_battery_level
        - sensor.gail_iphone_battery_state
        - sensor.ipad_battery_level
        - sensor.jennifers_iphone_battery_level
        - sensor.jennifers_iphone_battery_state
        - sensor.iphone_battery_level
        - sensor.iphone_battery_state
      actions:
      - service: notify.zulip
        data:
          message: Low batter on {{sensors}}.
          title: HA Sensor
- id: vacuum_start
  alias: Vacuum Start
  trigger:
  - platform: state
    entity_id:
    - person.gail
    - person.gervais
    from: home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: vacuum.consuela
      state: docked
    - condition: state
      entity_id: vacuum.delicious
      state: docked
    - condition: template
      value_template: '{{ as_timestamp(now()) - as_timestamp(state_attr("automation.vacuum_start"
        , "last_triggered")) | int > 432000 }}'
    - condition: template
      value_template: '{{ states("person.gail") != "home" }}'
    - condition: template
      value_template: '{{ states("person.gervais") != "home" }}'
  action:
  - service: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: light.bedroom_lights
  - service: vacuum.start
    data: {}
    target:
      entity_id:
      - vacuum.consuela
      - vacuum.delicious
- id: mop_start
  alias: Mop Start
  trigger:
    platform: state
    entity_id: vacuum.consuela
    to: docked
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ as_timestamp(now()) - as_timestamp(state_attr("automation.vacuum_start"
        , "last_triggered")) | int < 36000 }}'
    - condition: template
      value_template: '{{ as_timestamp(now()) - as_timestamp(state_attr("automation.vacuum_stop",
        "last_triggered")) | int > 1800 }}'
  action:
    service: vacuum.start
    data: {}
    entity_id: vacuum.alice
- id: vacuum_stop
  alias: Vacuum Stop
  initial_state: false
  trigger:
    platform: state
    entity_id: group.jen_tracker,person.gail,person.gervais
    to: home
  condition:
    condition: or
    conditions:
    - condition: state
      entity_id: vacuum.alice
      state: cleaning
    - condition: state
      entity_id: vacuum.consuela
      state: cleaning
  action:
    service: vacuum.return_to_base
    entity_id: all
- id: zigbee_log_level
  alias: Zigbee2mqtt Log Level
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.zigbee2mqtt_log_level
  action:
    service: mqtt.publish
    data:
      payload_template: '{{ states(''input_select.zigbee2mqtt_log_level'') }}'
      topic: zigbee2mqtt/bridge/config/log_level
- id: zigbee_join_enabled
  alias: Zigbee Join Enabled
  trigger:
    platform: state
    entity_id: switch.zigbee2mqtt_main_join
    to: 'on'
  action:
    service: timer.start
    entity_id: timer.zigbee_permit_join
- id: zigbee_join_disabled
  alias: Zigbee Join Disabled
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.zigbee_permit_join
  - platform: state
    entity_id: switch.zigbee2mqtt_main_join
    to: 'off'
  action:
  - service: timer.cancel
    data:
      entity_id: timer.zigbee_permit_join
  - service: switch.turn_off
    entity_id: switch.zigbee2mqtt_main_join
- id: '1705282122548'
  alias: Lock Volvo
  description: ''
  trigger:
  - platform: state
    entity_id:
    - device_tracker.yv4162uk5l2256988_position
    to: home
    for:
      hours: 0
      minutes: 15
      seconds: 0
  - platform: state
    entity_id:
    - device_tracker.yv4162uk5l2256988_position
    to: Knowledge Park
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - service: lock.lock
    metadata: {}
    data: {}
    target:
      entity_id: lock.yv4162uk5l2256988_door_lock
  mode: single
- id: '1708818994369'
  alias: Heat - Turn down at bed time
  description: ''
  trigger:
  - platform: time
    at: '23:00:00'
  condition:
  - condition: and
    conditions:
    - condition: not
      conditions:
      - condition: state
        entity_id: sensor.season
        state: summer
    - condition: numeric_state
      entity_id: sensor.saint_john_temperature
      below: 5
  action:
  - service: scene.turn_on
    metadata: {}
    target:
      entity_id: scene.heat_sleep
  mode: single
- id: misc_bed_room_turn_off_tv
  alias: Turn off bed room tv when idle
  trigger:
  - platform: time_pattern
    minutes: /20
    seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ states("media_player.bedroomtv") != "standby" }}'
    - condition: template
      value_template: '{{ states("media_player.bedroomtv") != "unavailable" }}'
    - condition: or
      conditions:
      - condition: state
        entity_id: media_player.plex_plex_for_roku_bedroomtv
        state: idle
        for:
          minutes: 15
      - condition: state
        entity_id: media_player.bedroomtv
        state: idle
        for:
          minutes: 15
      - condition: state
        entity_id: media_player.bedroomtv
        state: home
        for:
          minutes: 15
      - condition: state
        entity_id: media_player.bedroomtv
        state: 'on'
        for:
          minutes: 15
  action:
  - service: remote.send_command
    data:
      command: power
    target:
      entity_id: remote.bedroomtv
  mode: single
  initial_state: true
- id: '1709693054657'
  alias: Heat - Not workday wake up
  description: ''
  trigger:
  - platform: time
    at: '10:00:00'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ states("sensor.season") != "summer" }}'
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'off'
    - condition: numeric_state
      entity_id: sensor.saint_john_temperature
      below: 5
  action:
  - service: scene.turn_on
    metadata: {}
    target:
      entity_id: scene.heat_home
  mode: single
- id: '1709865400186'
  alias: 'IR Sync up - Sunset '
  description: ''
  trigger:
  - platform: state
    entity_id:
    - scene.sunset
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: script.turn_on
    metadata: {}
    data: {}
    target:
      entity_id:
      - script.dining_room_shelf_blue
  mode: single
- id: '1709866403421'
  alias: IR Sync up - Goodnight
  description: ''
  trigger:
  - platform: state
    entity_id:
    - scene.goodnight
  condition: []
  action:
  - service: script.turn_on
    metadata: {}
    data: {}
    target:
      entity_id:
      - script.dining_shelf_candles_off
  mode: single
- id: '1717197737888'
  alias: Fan - turn off
  description: ''
  trigger:
  - platform: time
    at: 09:00:00
  - platform: state
    entity_id:
    - person.gail
    from: home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id:
    - person.gervais
    from: home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: or
    conditions:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: and
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: person.gail
            state: home
        - condition: not
          conditions:
          - condition: state
            entity_id: person.gervais
            state: home
    - condition: and
      conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: person.gail
          state: home
      - condition: not
        conditions:
        - condition: state
          entity_id: person.gervais
          state: home
  action:
  - service: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.switch4
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
    enabled: true
  - service: switch.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: switch.switch4
    enabled: true
  mode: single
- id: '1717456710664'
  alias: Keep toggle switches on
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.switch4
    to: 'off'
  - platform: state
    entity_id:
    - switch.switch1
    to: 'off'
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: switch.turn_on
    metadata: {}
    data: {}
    target:
      entity_id:
      - switch.switch4
      - switch.switch1
  mode: restart
