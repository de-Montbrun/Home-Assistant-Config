#################################################################
#### Automations
#################################################################

# {{{ Home Assistant

- id: ha_startup_items
  alias: "Home Assistant Startup Item"
  trigger:
    platform: homeassistant
    event: start
  action:
    - service: mqtt.publish
      data:
        topic: "cmnd/tasmotas/backlog"
        payload: "power1 ;power2 ;power3 ;power4 ;power5; dimmer; state "

- id: ha_notify_ha_update_available
  alias: Update Available Notification
  initial_state: false
  trigger:
    platform: state
    entity_id: binary_sensor.python_package_index_pypi_update_available, binary_sensor.instance02_python_package_index_pypi_update_available, binary_sensor.cottage_python_package_index_pypi_update_available
    from: 'off'
    to: 'on'
  action:
    service: notify.zulip
    data:
      message: '{{ trigger.to_state.attributes.friendly_name }} has an update available.'
      title: 'Home Assistant'

- id: ha_notify_hacs_update_available
  alias: HACS Update Available Notification
  initial_state: false
  trigger:
    - platform: template
      value_template: '{{ states.sensor.hacs.state | int > 0 }}'
    - platform: template
      value_template: '{{ states.sensor.instance02_hacs.state | int > 0 }}'
    - platform: template
      value_template: '{{ states.sensor.cottage_hacs.state | int > 0 }}'
  action:
    service: notify.zulip
    data:
      message: '{{ trigger.to_state.attributes.friendly_name }} has an update available.'
      title: 'Home Assistant'

# }}}
# {{{ Alarm

- id: occupancy_alarm_no_one_home_alarm_alarm
  alias: 'Occupancy - no one home - alarm alarm'
  initial_state: true
  trigger:
    platform: state
    entity_id: group.cam_tracker,group.jen_tracker,person.gail,person.gervais
    from: 'home'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states("person.gail") != "home" }}'
      - condition: template
        value_template: '{{ states("person.gervais") != "home" }}'
      - condition: template
        value_template: '{{ states("group.cam_tracker") != "home" }}'
      - condition: template
        value_template: '{{ states("group.jen_tracker") != "home" }}'
  action:
    service: alarm_control_panel.alarm_arm_away
    target:
      entity_id: alarm_control_panel.alarmo

- id: occupancy_alarm_return_home_disarm_alarm
  alias: 'Occupancy - return home - disarm alarm'
  initial_state: true
  trigger:
    platform: state
    entity_id: group.cam_tracker,group.jen_tracker,person.gail,person.gervais
    to: 'home'
  action:
    service: alarm_control_panel.alarm_disarm
    target:
      entity_id: alarm_control_panel.alarmo

# }}}
# {{{ Buttons

- id: tap0_button_1
  alias: 'Tap0 Button 1'
  trigger:
    - device_id: 2b533c9f9b279032d1907efe688c476d
      domain: hue
      platform: device
      type: initial_press
      subtype: 1
      unique_id: a9cd78d6-bb3c-404b-9091-af08cc7a2b45
  action:
    service: light.toggle
    entity_id: light.sunroom_lights

- id: tap0_button_2
  alias: 'Tap0 Button 2'
  trigger:
    - device_id: 2b533c9f9b279032d1907efe688c476d
      domain: hue
      platform: device
      type: initial_press
      subtype: 2
      unique_id: a9cd78d6-bb3c-404b-9091-af08cc7a2b45
  action:
    service: scene.turn_on
    entity_id: scene.sunroom_dim

- id: tap0_button_3
  alias: 'Tap0 Button 3'
  trigger:
    - device_id: 2b533c9f9b279032d1907efe688c476d
      domain: hue
      platform: device
      type: initial_press
      subtype: 3
      unique_id: a9cd78d6-bb3c-404b-9091-af08cc7a2b45
  action:
    - service: homeassistant.turn_on
      entity_id: automation.lighting_plex_play_pause
    - service: homeassistant.turn_on
      entity_id: automation.sunroom_no_occupancy_lights_off
    - service: scene.turn_on
      entity_id: scene.sunroom_dim

- id: tap0_button_4
  alias: 'Tap0 Button 4'
  trigger:
    - device_id: 2b533c9f9b279032d1907efe688c476d
      domain: hue
      platform: device
      type: initial_press
      subtype: 4
      unique_id: a9cd78d6-bb3c-404b-9091-af08cc7a2b45
  action:
    - service: homeassistant.turn_off
      entity_id: automation.lighting_plex_play_pause
    - service: homeassistant.turn_off
      entity_id: automation.sunroom_no_occupancy_lights_off
    - service: scene.turn_on
      entity_id: scene.sunroom_normal

# }}}
# {{{ Cooling

- id: cooling_bedroom_fan_on
  alias: 'Bedroom Window fan on'
  initial_state: false
  trigger:
    - platform: template
      value_template: '{{ states.sensor.saint_john_temperature.state < states.sensor.master_bedroom_temperature.state }}'
    - platform: time
      at: '20:00:00'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states.sensor.master_bedroom_temperature.state | int >= 18 }}'
      - condition: state
        entity_id: sensor.season
        state: 'summer'
      - condition: or
        conditions:
          - condition: time
            after: '18:00:00'
          - condition: time
            before: '08:00:00'
  action:
    service: switch.turn_on
    entity_id:
      - switch.switch8

- id: cooling_bedroom_fan_off
  alias: 'Bedroom Window fan off'
  initial_state: false
  trigger:
    - platform: template
      value_template: '{{ states.sensor.saint_john_temperature.state > states.sensor.master_bedroom_temperature.state }}'
    - platform: template
      value_template: '{{ states.sensor.master_bedroom_temperature.state | int < 18 }}'
    - platform: time
      at: '08:00:00'
  condition:
    condition: or
    conditions:
      - condition: template
        value_template: '{{ states.sensor.master_bedroom_temperature.state | int < 18 }}'
      - condition: template
        value_template: '{{ states.sensor.saint_john_temperature.state > states.sensor.master_bedroom_temperature.state }}'
      - condition: and
        conditions:
          - condition: state
            entity_id: sensor.season
            state: 'summer'
          - condition: and
            conditions:
              - condition: state
                entity_id: person.gail
                state: 'home'
              - condition: state
                entity_id: binary_sensor.workday_sensor
                state: 'on'
  action:
    service: switch.turn_off
    entity_id:
      - switch.switch8

# }}}
# {{{ Dehumidifiers

- id: dehumidifiers_on
  alias: 'Dehumidifier on - too moist'
  initial_state: true
  trigger:
    platform: template
    value_template: '{{ states.sensor.temperature_humidity_sensor_dca4_humidity.state | int >= 70 }}'
  action:
    service: switch.turn_on
    entity_id:
      - switch.switch10
      - switch.switch11

- id: dehumidifiers_off
  alias: 'Dehumidifier off - dry enough'
  initial_state: true
  trigger:
    platform: template
    value_template: '{{ states.sensor.temperature_humidity_sensor_dca4_humidity.state | int <= 65 }}'
  action:
    service: switch.turn_off
    entity_id:
      - switch.switch10
      - switch.switch11

# }}}
# {{{ Heating

- id: occupancy_heating_no_one_home_turn_down_heat
  alias: 'Occupancy - no one home - turn down heat'
  initial_state: true
  trigger:
    platform: state
    entity_id: group.cam_tracker,group.jen_tracker,person.gail,person.gervais
    from: 'home'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states("person.gail") != "home" }}'
      - condition: template
        value_template: '{{ states("person.gervais") != "home" }}'
      - condition: template
        value_template: '{{ states("group.cam_tracker") != "home" }}'
      - condition: template
        value_template: '{{ states("group.jen_tracker") != "home" }}'
      - condition: template
        value_template: '{{ states("sensor.season") != "summer" }}'
      - condition: template
        value_template: '{{ states.sensor.saint_john_temperature.state | int <= 5 }}'
  action:
    service: climate.set_preset_mode
    data:
      entity_id: climate.my_ecobee
      preset_mode: 'Away'

- id: occupancy_heating_return_home_turn_up_heat
  alias: 'Occupancy - return home - turn up heat'
  initial_state: true
  trigger:
    platform: state
    entity_id: group.cam_tracker,group.jen_tracker,person.gail,person.gervais
    to: 'home'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states("sensor.season") != "summer" }}'
      - condition: template
        value_template: '{{ states.sensor.saint_john_temperature.state | int <= 5 }}'
      - condition: time
        after: '16:30:00'
      - condition: time
        before: '23:20:00'
  action:
    service: climate.set_preset_mode
    data:
      entity_id: climate.my_ecobee
      preset_mode: 'Home'

- id: occupancy_heating_gandg_not_home_turn_off_bedroom_heater
  alias: 'Occupancy - GandG not home - turn off bedroom heater'
  initial_state: true
  trigger:
    platform: state
    entity_id: person.gail,person.gervais
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states("person.gail") != "home" }}'
      - condition: template
        value_template: '{{ states("person.gervais") != "home" }}'
      - condition: template
        value_template: '{{ states("sensor.season") != "summer" }}'
  action:
    service: climate.set_hvac_mode
    data:
      entity_id: climate.bedroom_heater
      hvac_mode: 'off'

- id: occupancy_heating_gandg_return_home_turn_on_bedroom_heater
  alias: 'Occupancy - GandG return home - turn on bedroom heater'
  initial_state: true
  trigger:
    platform: state
    entity_id: person.gail,person.gervais
    to: 'home'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states("sensor.season") != "summer" }}'
      - condition: template
        value_template: '{{ states.sensor.saint_john_temperature.state | int <= 5 }}'
  action:
    service: climate.set_hvac_mode
    data:
      entity_id: climate.bedroom_heater
      hvac_mode: 'heat_cool'

- id: occupancy_heating_work_day_dressing_room_heater
  alias: 'Work day dressing room heater schedule'
  initial_state: false
  trigger:
    - platform: time
      at: '08:00:00'
    - platform: time
      at: '17:15:00'
    - platform: time
      at: '22:15:00'
    - platform: state
      entity_id: person.gail
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states("sensor.season") != "summer" }}'
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
  action:
    service: climate.set_hvac_mode
    data:
      hvac_mode: |
          {%- if (now().strftime("%H") | int < 17)
            and (now().strftime("%H") | int >= 8)
            and is_state("person.gail", "home")
            and states("sensor.season") != "summer" -%}
              heat_cool
          {%- else -%}
              off
          {% endif %}
      entity_id: climate.dressing_room_heater

- id: heating_office_heater_off
  alias: '6pm - heater off'
  initial_state: true
  trigger:
    - platform: time
      at: '18:00:00'
    - platform: time
      at: '18:30:00'
    - platform: time
      at: '19:00:00'
  condition:
    condition: and
    conditions:
      condition: template
      value_template: '{{ states("sensor.season") != "summer" }}'
  action:
    service: switch.turn_off
    entity_id: switch.switch1

- id: occupancy_heating_gervais_away_heater_off
  alias: 'Gervais away - turn off heater'
  initial_state: true
  trigger:
    - platform: state
      entity_id: person.gervais
      from: 'home'
  condition:
    condition: template
    value_template: '{{ states("sensor.season") != "summer" }}'
  action:
    service: switch.turn_off
    entity_id:
      - switch.switch1

# }}}
# {{{ Lighting

# {{{ Bedroom

- id: occupancy_bedroom_gang_not_home
  alias: 'GandG not home - turn off bedroom things'
  initial_state: true
  trigger:
    - platform: state
      entity_id: person.gail
      from: 'home'
    - platform: state
      entity_id: person.gervais
      from: 'home'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states("person.gail") != "home" }}'
      - condition: template
        value_template: '{{ states("person.gervais") != "home" }}'
  action:
    - service: light.turn_off
      entity_id:
        - light.bedroom_lights
        - light.dressing_room_lights
    - condition: state
      entity_id: sun.sun
      state: 'above_horizon'
    - service: light.turn_off
      entity_id: light.bathroom_lights

- id: occupancy_bedroom_turn_on_lights
  alias: 'Occupancy in bedroom - turn on lights'
  initial_state: false
  trigger:
    platform: state
    entity_id: binary_sensor.master_bedroom_occupancy
    to: 'on'
  condition:
    - condition: state
      entity_id: light.bedroom_lights
      state: 'off'
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
  action:
    service: light.turn_on
    entity_id: light.bedroom_lights

- id: occupancy_bedroom_turn_off_lights
  alias: 'No one in bedroom - turn off lights'
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.master_bedroom_occupancy
    to: 'off'
    for:
      minutes: 30
  action:
    - service: light.turn_off
      entity_id:
        - light.bedroom_lights
    - condition: state
      entity_id: sun.sun
      state: 'above_horizon'
    - service: light.turn_off
      entity_id: light.bathroom_lights

# }}}
# {{{ Basement
# }}}
# {{{ Cottage

- id: occupancy_cottage_turn_off_lights
  alias: 'Occupancy - no one at cottage - turn off lights'
  initial_state: true
  trigger:
    platform: state
    entity_id: person.gail,person.gervais
    from: 'Cottage'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states("person.gail") != "Cottage" }}'
      - condition: template
        value_template: '{{ states("person.gervais") != "Cottage" }}'
  action:
    - service: light.turn_off
      entity_id: light.cottage_lights
    - delay: '00:00:10'
    - service: light.turn_off
      entity_id: light.cottage_lights

- id: occupancy_cottage_turn_on_lights
  alias: 'Occupancy at cottage - turn on lights'
  initial_state: true
  mode: restart
  trigger:
    platform: state
    entity_id: person.gervais,person.gail
    to: 'Cottage'
  condition:
    - condition: state
      entity_id: light.cottage_lights
      state: 'off'
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
  action:
    - service: light.turn_on
      entity_id: light.cottage_lights
    - delay: '00:00:10'
    - service: light.turn_on
      entity_id: light.cottage_lights

# }}}
# {{{ Hallway

- id: occupancy_hallway_turn_on_lights
  alias: 'Occupancy in hallway - turn on lights'
  mode: restart
  trigger:
    platform: state
    entity_id: binary_sensor.my_ecobee_occupancy,binary_sensor.upstair_hall_occupancy
    to: 'on'
  condition:
    - condition: state
      entity_id: light.hallway_lights
      state: 'off'
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
  action:
    - service: light.turn_on
      entity_id: light.hallway_lights
    - delay: 00:15
    - service: light.turn_off
      entity_id: light.hallway_lights

# }}}
# {{{ Kitchen

- id: occupancy_lighting_kitchen_on
  alias: 'Kitchen - Occupancy lights on'
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.kitchen_sensor_motion
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.kitchen_lights
        state: 'off'
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
  action:
    service: light.turn_on
    entity_id: light.kitchen_swirlies
    data:
      brightness: 255

- id: occupancy_lighting_kitchen_off
  alias: 'Kitchen - No occupancy lights off'
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.kitchen_sensor_motion
    to: 'off'
    for:
      minutes: 45
  action:
    service: light.turn_off
    entity_id: light.kitchen_lights

# }}}
# {{{ Livingroom
# }}}
# {{{ Office

- id: turn_on_lights_office
  alias: 'Occupancy in Office - turn on lights'
  initial_state: false
  trigger:
    - platform: state
      entity_id: binary_sensor.office_occupancy
      to: 'on'
    - platform: time
      at: '09:00:00'
  condition:
    - condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'on'
    - condition: time
      after: '8:00'
      before: '20:00'
  action:
    - service: light.turn_on
      data:
        entity_id: light.office_lights
        brightness: 255
    - condition: state
      entity_id: person.gail
      state: 'home'
    - service: light.turn_on
      entity_id: light.dressing_room_lights

- id: turn_off_lights_office
  alias: 'No one in Office - turn off lights'
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.office_occupancy
    to: 'off'
    for:
      minutes: 10
  action:
    - service: light.turn_off
      entity_id: light.office_lights
    - service: switch.turn_off
      entity_id: switch.switch1
    - condition: template
      value_template: '{{ states("person.gail") != "home" }}'
    - service: light.turn_off
      entity_id: light.dressing_room_lights

# }}}
# {{{ Outdoor

- id: movement_front_door_timed_lights
  alias: 'Timed lights - Movement Front Door'
  initial_state: true
  mode: restart
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.doorbell_motion
        - binary_sensor.doorbell_doorbell
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.outdoor_lights
        state: 'off'
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
  action:
    - service: homeassistant.turn_off
      entity_id: automation.timed_lights_movement_front_door
    - service: light.turn_on
      data:
        entity_id:
          - light.outdoor_lights
        brightness: 255
    - delay: '00:10:00'
    - service: light.turn_off
      entity_id:
        - light.outdoor_lights
    - delay: '00:00:04'
    - service: homeassistant.turn_on
      entity_id: automation.timed_lights_movement_front_door

# }}}
# {{{ Spare Room

- id: occupancy_spare_room_on
  alias: 'Spareroom - Occupancy lights on'
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.spare_room_sensor_motion
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.spare_room_lights
        state: 'off'
      - condition: template
        value_template: '{{ states.sensor.spare_room_sensor_light_level.attributes.dark }}'
  action:
    service: light.turn_on
    entity_id: light.spare_room_lights

- id: occupancy_spare_room_off
  alias: 'Spareroom - No occupancy lights off'
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.spare_room_sensor_motion
    to: 'off'
    for:
      minutes: 5
  action:
    service: light.turn_off
    entity_id: light.spare_room_lights

# }}}
# {{{ Sun Room

- id: lighting_sunroom_tv_play-pause
  alias: 'Lighting - TV play/pause'
  initial_state: true
  trigger:
    platform: state
    entity_id: media_player.plex_sunroom
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: light.sunroom_lights
        state: 'on'
  action:
    service: scene.turn_on
    data:
      entity_id: |
        {%- if trigger.to_state.state == 'playing' -%}
              scene.sunroom_dim
        {%- else -%}
              scene.sunroom_normal
        {% endif %}

- id: occupancy_lighting_motion_sunromm
  alias: 'Timed lights - Movement in Sunroom'
  mode: restart
  trigger:
    platform: state
    entity_id: binary_sensor.sun_room_sensor_motion
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.sunroom_lights
        state: 'off'
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
  action:
    - service: scene.turn_on
      entity_id: scene.sunroom_nightlight
    - service: light.turn_on
      entity_id: light.hallway_lights
    - delay: '00:10'
    - condition: state
      entity_id: binary_sensor.kitchen_sensor_motion
      state: 'off'
    - condition: state
      entity_id: media_player.roku_sunroom
      state: 'standby'
    - condition: time
      after: '23:59'
    - service: light.turn_off
      entity_id:
        - light.sunroom_lights
        - light.hallway_lights

- id: occupancy_lighting_sunroom_off
  alias: 'Sunroom - No occupancy lights off'
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.sun_room_sensor_motion
    to: 'off'
    for:
      minutes: 10
  condition:
    condition: state
    entity_id: media_player.roku_sunroom
    state: 'standby'
  action:
    service: light.turn_off
    entity_id: light.sunroom_lights

- id: lighting_sunroom_lumens_low_lights_on
  alias: 'Sunroom lumens low - lights on'
  initial_state: true
  trigger:
    - platform: state
      entity_id: media_player.roku_sunroom
      from: 'standby'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states.sensor.sun_room_sensor_light_level.attributes.lightlevel < 6500 }}'
      - condition: state
        entity_id: light.sunroom_lights
        state: 'off'
  action:
    - service: scene.turn_on
      entity_id: scene.sunroom_normal
    - service: light.turn_on
      entity_id: light.saltlick

# }}}

# }}}
# {{{ Misc

- id: bedtime
  alias: 'Bedtime'
  initial_state: false
  mode: restart
  trigger:
    platform: state
    entity_id: media_player.roku_sunroom
    to: 'standby'
    for:
      minutes: 5
  condition:
    condition: and
    conditions:
      - condition: or
        conditions:
        - condition: time
          after: '22:00:00'
        - condition: time
          before: '02:00:00'
      - condition: and
        conditions:
          - condition: state
            entity_id: person.gervais
            state: 'home'
          - condition: or
            conditions:
            - condition: state
              entity_id: person.gail
              state: 'home'
            - condition: template
              value_template: '{{ distance(states.device_tracker.grdems_phone_2) > 10 }}'
      - condition: and
        conditions:
          - condition: state
            entity_id: person.gail
            state: 'home'
          - condition: or
            conditions:
            - condition: state
              entity_id: person.gervais
              state: 'home'
            - condition: template
              value_template: '{{ distance(states.device_tracker.iphone) > 10 }}'
  action:
    - delay: '00:15:00'
    - service: homeassistant.turn_off
      entity_id:
        - light.basement_light
        - light.bathroom_lights
        - light.cottage_lights
        - light.livingroom_shelves
        - light.main_floor_lights
        - light.office_lights
        - light.second_floor_lights
        - switch.switch1
        - switch.switch3
    - service: climate.set_preset_mode
      data:
        entity_id: climate.my_ecobee
        preset_mode: 'Sleep'
    - delay: '00:00:10'
    - service: light.turn_off
      entity_id: light.cottage_lights

- id: doorbell_doorbell
  alias: 'Doorbell rang - pause tv'
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.doorbell_doorbell
    to: 'on'
  action:
    service: media_player.media_play_pause
    entity_id: media_player.plex_sunroom

- id: everyone_home_and_gone_to_bed
  alias: 'Everyone home and gone to bed - Lights out'
  initial_state: true
  trigger:
    - platform: state
      entity_id: media_player.roku_sunroom
      to: 'standby'
      for:
        minutes: 15
    - platform: state
      entity_id: person.gail,person.gervais
      to: 'home'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '22:30:00'
      - condition: state
        entity_id: media_player.roku_sunroom
        state: 'standby'
      - condition: or
        conditions:
          - condition: template
            value_template: '{{ states("person.gail") != "home" }}'
          - condition: template
            value_template: '{{ distance(states.device_tracker.grdems_phone_2) > 10 }}'
      - condition: or
        conditions:
          - condition: template
            value_template: '{{ states("person.gervais") != "home" }}'
          - condition: template
            value_template: '{{ distance(states.device_tracker.iphone) > 10 }}'
  action:
    - delay: '00:10:00'
    - service: homeassistant.turn_off
      entity_id: automation.timed_lights_movement_front_door
    - service: light.turn_off
      entity_id: all
    - service: homeassistant.turn_off
      entity_id:
        - light.bathroom_lights
        - light.main_floor_lights
        - light.outdoor_lights
        - light.second_floor_lights
    - delay: '00:00:04'
    - service: homeassistant.turn_on
      entity_id: automation.timed_lights_movement_front_door

- id: lighting_2am_lights_off
  alias: '2am - Lights out'
  initial_state: true
  trigger:
    platform: time
    at: '02:00:00'
  action:
    - service: homeassistant.turn_off
      entity_id: automation.timed_lights_movement_front_door
    - service: switch.turn_off
      entity_id:
        - switch.switch0
        - switch.switch3
    - service: light.turn_off
      entity_id: all
    - delay: '00:00:05'
    - service: homeassistant.turn_on
      entity_id: automation.timed_lights_movement_front_door

- id: showing
  alias: 'Showing - Lights on'
  initial_state: false
  trigger:
    - platform: time
      at: '08:00:00'
    - platform: time
      at: '09:00:00'
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '11:00:00'
    - platform: time
      at: '12:00:00'
    - platform: time
      at: '13:00:00'
    - platform: time
      at: '14:00:00'
    - platform: time
      at: '15:00:00'
    - platform: time
      at: '16:00:00'
    - platform: time
      at: '17:00:00'
    - platform: time
      at: '18:00:00'
    - platform: time
      at: '19:00:00'
    - platform: time
      at: '20:00:00'
    - platform: time
      at: '21:00:00'
    - platform: time
      at: '22:00:00'
    - platform: sun
      event: sunset
      offset: '-00:30:00'
  action:
    - service: scene.turn_on
      entity_id:
        - scene.showing

- id: sunrise
  alias: 'Sunrise - Lights out'
  initial_state: false
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:30:00'
  action:
    - service: light.turn_off
      entity_id:
        - light.hallway_lights
        - light.main_floor_lights
        - light.outdoor_lights
        - light.dressing_room_lights
        - light.spare_room_lights
        - light.sunroom_lights
        - light.upstairsbathroom
    - condition: state
      entity_id: binary_sensor.master_bedroom_occupancy
      state: 'off'
    - service: light.turn_off
      entity_id: all

- id: sunset
  alias: 'Sunset - Lights on'
  initial_state: true
  trigger:
    platform: sun
    event: sunset
    offset: '-00:30:00'
  action:
    - service: scene.turn_on
      entity_id:
        - scene.sunset
        - scene.sunroom_dim
    - service: switch.turn_on
      entity_id:
        - switch.switch3

- id: misc_sabnzb_speed_limit
  alias: 'Set sabnzb speed limit'
  initial_state: true
  trigger:
    - platform: state
      entity_id: person.gail,person.gervais,group.jen_tracker
    - platform: 'time'
      at: '10:00:00'
    - platform: 'time'
      at: '18:00:00'
    - platform: 'time'
      at: '02:00:00'
    - platform: template
      value_template: '{{ states.media_player | select("match", ".*media_player.plex_.*") | list | selectattr("state", "equalto", "playing") | list | count | int > 2 }}'
    - platform: template
      value_template: '{{ states.media_player | select("match", ".*media_player.plex_.*") | list | selectattr("state", "equalto", "playing") | list | count | int <= 2 }}'
    - platform: template
      value_template: '{{ states.sensor.load_5m.state | int > 5 }}'
    - platform: template
      value_template: '{{ states.sensor.load_5m.state | int <= 5 }}'
  action:
    service: rest_command.sabnzb_api

- id: misc_sunroom_turn_off_tv
  alias: 'Turn off sunroom tv when idle'
  initial_state: true
  trigger:
    - platform: time_pattern
      minutes: '/20'
      seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states("media_player.roku_sunroom") != "standby" }}'
      - condition: template
        value_template: '{{ states("media_player.roku_sunroom") != "unavailable" }}'
      - condition: state
        entity_id: binary_sensor.sun_room_sensor_motion
        state: 'off'
        for:
          minutes: 39
      - condition: or
        conditions:
          - condition: state
            entity_id: media_player.plex_sunroom
            state: 'idle'
            for:
              minutes: 15
          - condition: state
            entity_id: media_player.roku_sunroom
            state: 'idle'
            for:
              minutes: 15
          - condition: state
            entity_id: media_player.roku_sunroom
            state: 'home'
            for:
              minutes: 15
          - condition: state
            entity_id: media_player.roku_sunroom
            state: 'on'
            for:
              minutes: 15
  action:
    service: remote.send_command
    data:
      entity_id: remote.roku_sunrooom
      command: power

# }}}
# {{{ Notifications

- id: notify_drive_filling
  alias: 'Drive is filling'
  initial_state: false
  trigger:
    - platform: template
      value_template: '{{ states.sensor.disk_use_percent.state | int >= 95 }}'
    - platform: template
      value_template: '{{ states.sensor.disk_use_percent_boot.state | int >= 95 }}'
    - platform: template
      value_template: '{{ states.sensor.disk_use_percent_home.state | int >= 95 }}'
    - platform: template
      value_template: '{{ states.sensor.disk_use_percent_media_apple.state | int >= 95 }}'
    - platform: template
      value_template: '{{ states.sensor.disk_use_percent_media_wine.state | int >= 95 }}'
  action:
    service: notify.zulip
    data:
      message: >
        :warning:
        {% if trigger.to_state.attributes.friendly_name == 'Disk use (percent) /' %} Root
        {% elif trigger.to_state.attributes.friendly_name == 'Disk use (percent) /boot' %} Boot
        {% elif trigger.to_state.attributes.friendly_name == 'Disk use (percent) /home' %} Home
        {% elif trigger.to_state.attributes.friendly_name == 'Disk use (percent) /media/apple' %} Apple
        {% elif trigger.to_state.attributes.friendly_name == 'Disk use (percent) /media/cracker' %} Cracker
        {% elif trigger.to_state.attributes.friendly_name == 'Disk use (percent) /media/wine' %} Wine
        {% endif %}
        drive is almost full.
      title: 'Alert'

- id: notify_home_presence
  alias: 'Home presence notification'
  initial_state: false
  trigger:
    platform: state
    entity_id: group.cam_tracker,group.jen_tracker,group.grant_tracker
  condition:
    condition: numeric_state
    entity_id: 'sensor.hass_uptime'
    above: '.01'
  action:
    service: notify.zulip
    data_template:
      message: >
        :{{ trigger.to_state.attributes.friendly_name | lower }}:
        {{ trigger.to_state.attributes.friendly_name }} has
        {%- if trigger.to_state.state == 'home' %} entered
        {%- else %} exited
        {%- endif %} home.
      title: 'Family Location'

- id: notify_phone_presence
  alias: 'Phones presence notification'
  initial_state: false
  trigger:
    platform: state
    entity_id: person.gervais,person.gail
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: 'sensor.hass_uptime'
        above: '.01'
      - condition: template
        value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    service: notify.zulip
    data_template:
      message: >
        :{{ trigger.to_state.attributes.friendly_name | lower }}:
        {{ trigger.to_state.attributes.friendly_name }} has
        {%- if trigger.from_state.state == 'not_home' or trigger.from_state.state == 'Away' %} entered {{ trigger.to_state.state }}.
        {%- else %} exited {{ trigger.from_state.state }}.
        {%- endif %}
      title: 'Family Location'

- id: notify_current_weather
  alias: 'Current weather notification'
  initial_state: false
  trigger:
    platform: state
    entity_id: sensor.saint_john_condition
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: 'sensor.hass_uptime'
        above: '.01'
      - condition: template
        value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
      - condition: template
        value_template: '{{ trigger.to_state.state != "unknown" }}'
      - condition: template
        value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.current_weather_notification.attributes.last_triggered) | int > 3600 }}'
  action:
    service: notify.zulip
    data_template:
      message: >
        **Weather Condition:** {{ states.sensor.saint_john_condition.state }}

        **Tempurature:** {{ states.sensor.saint_john_temperature.state }}{{ states.sensor.saint_john_temperature.attributes.unit_of_measurement }}
        {% if states.sensor.saint_john_humidex.state != 'unknown' or states.sensor.saint_john_wind_chill.state != 'unknown' %}

        **Feels like:** {%- if states.sensor.saint_john_humidex.state != 'unknown' %}
        {{ states.sensor.saint_john_wind_chill.state }}
        {% elif states.sensor.saint_john_temperature.state != 'unknown' %}
        {{ states.sensor.saint_john_temperature.state }}
        {% endif %}
        {{ states.sensor.saint_john_temperature.attributes.unit_of_measurement }}
        {% endif %}
      title: 'Weather'

- id: notify_current_uv_index
  alias: 'Current UV index notification'
  initial_state: false
  trigger:
    platform: numeric_state
    entity_id: sensor.saint_john_uv_index
    above: '5'
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: 'sensor.hass_uptime'
        above: '.01'
      - condition: state
        entity_id: sun.sun
        state: 'above_horizon'
  action:
    service: notify.zulip
    data:
      message: >
        :sunny: UV Index is {{ states.sensor.saint_john_uv_index.state }}. You better put on some sunscreen!
      title: 'Weather'

- id: notify_weather_forecast
  alias: 'Weather forecast notification'
  initial_state: false
  trigger:
    platform: time
    at: '08:00:00'
  action:
    service: notify.zulip
    data:
      message: >
        **Forecast:**

        {{ states.sensor.saint_john_forecast.state }}


        **High:** {{ states.sensor.saint_john_high_temperature.state }}{{ states.sensor.saint_john_high_temperature.attributes.unit_of_measurement }}

        **Low:** {{ states.sensor.saint_john_low_temperature.state }}{{ states.sensor.saint_john_low_temperature.attributes.unit_of_measurement }}
      title: 'Weather'

- id: notify_alarm_action
  alias: 'No one home motion notify'
  initial_state: false
  mode: parallel
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.basement_motion
        - binary_sensor.doorbell_doorbell
        - binary_sensor.jennifer_room_occupancy
        - binary_sensor.kitchen_sensor_motion
        - binary_sensor.living_room_occupancy
        - binary_sensor.master_bedroom_occupancy
        - binary_sensor.rack_motion
        - binary_sensor.my_ecobee_occupancy
        - binary_sensor.office_occupancy
        - binary_sensor.spare_room_sensor_motion
        - binary_sensor.sun_room_sensor_motion
        - binary_sensor.upstair_hall_occupancy
      to: 'on'
  condition:
    condition: template
    value_template: '{{ states("group.householdmembers") != "home" }}'
  action:
    - service: notify.zulip
      data_template:
        message: >
          :door: {{ trigger.to_state.attributes.friendly_name }}
          {% if trigger.to_state.attributes.device_class == 'motion' %} :wave:
          {% elif trigger.to_state.attributes.device_class == 'occupancy' %} :bell:
          {% endif %}
        title: 'Security Alert'

# }}}
# {{{ Push state to Cottage

- id: cottage-push-person-state
  alias: 'cottage_push_person_state'
  initial_state: true
  mode: restart
  trigger:
    platform: state
    entity_id: person.gervais,person.gail
  action:
    service: rest_command.set_cottage_person_state_via_api
    data:
      person: "{{ trigger.to_state.name }}"
      state: "{{ trigger.to_state.state }}"

# }}}
# {{{ Vacuum

- id: vacuum_no_one_home
  alias: Vacuum No One Home
  initial_state: true
  trigger:
    - platform: state
      entity_id: person.gail,person.gervais
      from: 'home'
      for: '00:05:00'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states("person.gail") != "home" }}'
      - condition: template
        value_template: '{{ states("person.gervais") != "home" }}'
      - condition: state
        entity_id: vacuum.consuela
        state: docked
      - condition: template
        value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.vacuum_no_one_home.attributes.last_triggered) | int > 432000 }}'
  action:
    service: vacuum.start
    data: {}
    entity_id: vacuum.consuela

- id: vacuum_stop
  alias: Vacuum Stop
  initial_state: true
  trigger:
    platform: state
    entity_id: group.jen_tracker,person.gail,person.gervais
    to: 'home'
  condition:
    condition: or
    conditions:
    - condition: state
      entity_id: vacuum.consuela
      state: cleaning
    - condition: state
      entity_id: vacuum.consuela
      state: cleaning
  action:
    - service: vacuum.stop
      entity_id: all
    - service: vacuum.return_to_base
      entity_id: all

# }}}
# {{{ Zigbee

- id: zigbee_log_level
  alias: Zigbee2mqtt Log Level
  initial_state: "on"
  trigger:
    platform: state
    entity_id: input_select.zigbee2mqtt_log_level
  action:
    service: mqtt.publish
    data:
      payload_template: "{{ states('input_select.zigbee2mqtt_log_level') }}"
      topic: zigbee2mqtt/bridge/config/log_level

# Automation to start timer when enable join is turned on
- id: zigbee_join_enabled
  alias: Zigbee Join Enabled
  trigger:
    platform: state
    entity_id: switch.zigbee2mqtt_main_join
    to: "on"
  action:
    service: timer.start
    entity_id: timer.zigbee_permit_join

# Automation to stop timer when switch turned off and turn off switch when timer finished
- id: zigbee_join_disabled
  alias: Zigbee Join Disabled
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.zigbee_permit_join
    - platform: state
      entity_id: switch.zigbee2mqtt_main_join
      to: "off"
  action:
    - service: timer.cancel
      data:
        entity_id: timer.zigbee_permit_join
    - service: switch.turn_off
      entity_id: switch.zigbee2mqtt_main_join

# }}}
# {{{ Fing

- id: occupancy_fing_update_user
  alias: 'Fing update user'
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.fing_state
  action:
    service: device_tracker.see
    data_template:
      dev_id: '{{ (trigger.to_state.state.split(": ")[1]).split(" ")[0]}}'
      location_name: >-
        {% if trigger.to_state.state.split(": ")[0] == 'Offline' %} not_home
        {% elif trigger.to_state.state.split(": ")[0] == 'In range' or trigger.to_state.state.split(": ")[0] == 'Online' %} home
        {% endif %}

# }}}
